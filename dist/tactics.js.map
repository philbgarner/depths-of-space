{"version":3,"file":"tactics.js","mappings":"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","sources":["webpack://tactics/webpack/universalModuleDefinition","webpack://tactics/webpack/bootstrap","webpack://tactics/webpack/runtime/define property getters","webpack://tactics/webpack/runtime/hasOwnProperty shorthand","webpack://tactics/webpack/runtime/make namespace object","webpack://tactics/./src/images.js","webpack://tactics/./src/sprites.js","webpack://tactics/./src/mainScene.js","webpack://tactics/./src/input.js","webpack://tactics/./src/character.js","webpack://tactics/./src/menuScene.js","webpack://tactics/./src/main.js"],"sourcesContent":["(function webpackUniversalModuleDefinition(root, factory) {\n\tif(typeof exports === 'object' && typeof module === 'object')\n\t\tmodule.exports = factory();\n\telse if(typeof define === 'function' && define.amd)\n\t\tdefine([], factory);\n\telse if(typeof exports === 'object')\n\t\texports[\"tactics\"] = factory();\n\telse\n\t\troot[\"tactics\"] = factory();\n})(self, () => {\nreturn ","// The require scope\nvar __webpack_require__ = {};\n\n","// define getter functions for harmony exports\n__webpack_require__.d = (exports, definition) => {\n\tfor(var key in definition) {\n\t\tif(__webpack_require__.o(definition, key) && !__webpack_require__.o(exports, key)) {\n\t\t\tObject.defineProperty(exports, key, { enumerable: true, get: definition[key] });\n\t\t}\n\t}\n};","__webpack_require__.o = (obj, prop) => (Object.prototype.hasOwnProperty.call(obj, prop))","// define __esModule on exports\n__webpack_require__.r = (exports) => {\n\tif(typeof Symbol !== 'undefined' && Symbol.toStringTag) {\n\t\tObject.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });\n\t}\n\tObject.defineProperty(exports, '__esModule', { value: true });\n};","import images from './images.json'\r\n\r\nvar ctx = null\r\n\r\nfunction setContext(context) {\r\n    ctx = context\r\n}\r\n\r\nfunction getContext() {\r\n    return ctx\r\n}\r\n\r\nfunction getImage(name) {\r\n    let img = images.filter(f => f.name === name)\r\n    return img.length > 0 ? img[0].image : null\r\n}\r\n\r\nfunction getImages() {\r\n    return images\r\n}\r\n\r\nfunction drawImage(name, x, y, srcRect) {\r\n    let img = images.filter(f => f.name === name)\r\n    if (img.length > 0) {\r\n        if (srcRect) {\r\n            ctx.drawImage(img[0].image, srcRect.x, srcRect.y, srcRect.w, srcRect.h, x, y, srcRect.w, srcRect.h)\r\n        } else {\r\n            ctx.drawImage(img[0].image, x, y)\r\n        }\r\n    }\r\n}\r\n\r\nfunction loadImage(filename) {\r\n    return new Promise((resolve, reject) => {\r\n        let img = new Image()\r\n        img.onload = (e) => {\r\n            resolve(img)\r\n        }\r\n        img.onerror = (e) => {\r\n            console.error(`Failed to load file ${filename}:`, e)\r\n            reject(null)\r\n        }\r\n        let image = images.filter(f => f.filename === filename)\r\n        if (image.length > 0) {\r\n            img.src = filename\r\n        } else {\r\n            console.error(`Image definition matching filename ${filename} not found.`)\r\n            reject(null)\r\n        }\r\n    })\r\n}\r\n\r\nfunction loadAllImages() {\r\n    let promises = []\r\n    for (let i in images) {\r\n        let image = images[i]\r\n        promises.push(new Promise((resolve, reject) => loadImage(image.filename).then(r => {\r\n            image.image = r\r\n            resolve(r)\r\n        }).catch(e => console.error('Failed to load', image.filename, e))))\r\n    }\r\n    return Promise.allSettled(promises)\r\n}\r\n\r\nexport { loadAllImages, loadImage, drawImage, getImage, getImages, setContext, getContext }\r\n","import { drawImage, getImages } from './images.js'\r\nimport animations from './sprites.json'\r\n\r\nfunction lerp (start, end, amt){\r\n    return (1-amt)*start+amt*end\r\n  }\r\n  function lerpCoords (start, end, amt){\r\n    return { x: (1-amt)*start.x+amt*end.x, y: (1-amt)*start.y+amt*end.y }\r\n  }\r\n\r\nfunction removeSprite(name) {\r\n    let index = sprites.findIndex(f => f.name === name)\r\n    if (index >= 0) {\r\n        sprites[index] = undefined\r\n    }\r\n    sprites = sprites.filter(f => f !== undefined)\r\n}\r\n\r\nfunction getMsSinceMidnight(d) {\r\n    var e = new Date(d);\r\n    return d - e.setHours(0,0,0,0)\r\n    }\r\n\r\nfunction buildSprite(name, x, y, pose, onComplete) {\r\n    if (!animations[name]) {\r\n        throw new Error(`Can't build sprite, missing animation definition '${name}'.`)\r\n    }\r\n    let sprite = {\r\n        name: name,\r\n        x: x, y: y,\r\n        frames: [],\r\n        pose: pose,\r\n        framesImage: null,\r\n        currentFrame: 0,\r\n        updateDelta: 0,\r\n        play: true\r\n    }\r\n    sprite.SetAnimation = (animation, pose, onComplete) => {\r\n        sprite.animStartTime = getMsSinceMidnight(new Date())\r\n        let anim = animations[animation]\r\n        if (onComplete) {\r\n            sprite.onComplete = onComplete\r\n        }\r\n        if (anim) {\r\n            let sprPose = anim.default ? anim.default : null\r\n            sprPose = anim[pose] ? anim[pose] : sprPose\r\n            if (sprPose) {\r\n                let img = getImages().filter(f => f.name === sprPose.imageName)\r\n                if (img.length > 0) {\r\n                    sprite.frames = sprPose.frames\r\n                    sprite.currentFrame = 0\r\n                    sprite.animation = animation\r\n                    sprite.pose = pose\r\n                    sprite.framesImage = sprPose.imageName\r\n                    if (sprPose.sfx) {\r\n                        let sfx = getSfx(sprPose.sfx)\r\n                        if (sfx) {\r\n                            sfx.play()\r\n                        }\r\n                    }\r\n                } else {\r\n                    throw new Error(`Can't find pose ${pose} in ${animation}.`)\r\n                }\r\n            } else {\r\n                sprite.frames = []\r\n                sprite.currentFrame = 0\r\n                sprite.animation = ''\r\n                sprite.pose = ''\r\n            }\r\n            sprite.play = true\r\n        }\r\n    }\r\n    sprite.draw = (offsetx, offsety) => {\r\n        offsetx = offsetx ? offsetx : 0\r\n        offsety = offsety ? offsety : 0\r\n        drawImage(sprite.framesImage, sprite.x + offsetx, sprite.y + offsety, sprite.frames[sprite.currentFrame])\r\n    }\r\n    sprite.moveTo = async (x, y, speed) => {\r\n        return new Promise(async (resolve, reject) => {\r\n            let spr = sprite\r\n            let ox = spr.x\r\n            let oy = spr.y\r\n            let spd = speed\r\n            let t = 0\r\n            let move = (mx, my) => new Promise((resolve, reject) => {\r\n                let handler = () => {\r\n                    t += spd\r\n                    if (t >= 1) {\r\n                        spr.x = x\r\n                        spr.y = y\r\n                        resolve()\r\n                    } else {\r\n                        let p = lerpCoords({ x: ox, y: oy }, { x: mx, y: my }, t)\r\n                        spr.x = p.x\r\n                        spr.y = p.y\r\n                        setTimeout(handler, 16)\r\n                    }\r\n                }\r\n                setTimeout(handler, 16)\r\n            })\r\n    \r\n            await move(x, y)\r\n            resolve()\r\n        })\r\n    }\r\n    sprite.onComplete = onComplete ? onComplete : (sprite) => {}\r\n    sprite.update = (delta) => {\r\n        let sprPose = animations[sprite.animation][sprite.pose]\r\n        if (sprPose && sprite.play) {\r\n            if (sprite.updateDelta > sprPose.frameDelay) {\r\n                sprite.currentFrame++\r\n                if (sprite.currentFrame > sprite.frames.length - 1) {\r\n                    if (sprPose.repeat) {\r\n                        sprite.currentFrame = 0\r\n                        sprite.animDuration = getMsSinceMidnight(new Date()) - sprite.animStartTime\r\n                        sprite.onComplete(sprite)\r\n                    } else {\r\n                        sprite.animDuration = getMsSinceMidnight(new Date()) - sprite.animStartTime\r\n                        sprite.currentFrame--\r\n                        sprite.play = false\r\n                        sprite.onComplete(sprite)\r\n                    }\r\n                    if (sprPose.onComplete) {\r\n                        sprPose.onComplete(sprite)\r\n                    }\r\n                }\r\n                sprite.updateDelta = 0\r\n            } else {\r\n                sprite.updateDelta += delta\r\n            }\r\n        }\r\n    }\r\n    sprite.SetAnimation(name, pose)\r\n\r\n    return sprite\r\n}\r\n\r\nfunction getAnimation(animation) {\r\n    try {\r\n        return animations[animation]\r\n    } catch {}\r\n    return {}\r\n}\r\n\r\nexport { buildSprite, removeSprite, getAnimation, getMsSinceMidnight }","import { getContext } from \"./images.js\"\r\n\r\nlet imu = null\r\n\r\nlet ctx = null\r\n\r\nlet tooltip = ''\r\n\r\nfunction drawFrame(delta) {\r\n    if (!ctx) {\r\n        ctx = getContext()\r\n    }\r\n    ctx.clearRect(0, 0, 320, 200)\r\n\r\n    /*ctx.save()\r\n    ctx.translate(120 - Player().x * TileSizes().x, 80 - Player().y * TileSizes().y)\r\n    DrawFOV(Player())\r\n    Player().draw()\r\n    let spriteObjs = getSpriteObjects()\r\n    for (let index in spriteObjs) {\r\n        spriteObjs[index].update(16)\r\n        spriteObjs[index].draw()\r\n    }\r\n\r\n    ctx.restore()*/\r\n\r\n    drawUI()\r\n}\r\n\r\nfunction drawUI(delta) {\r\n    if (!imu) {\r\n        imu = new imui.ImUI(ctx.canvas)\r\n        imu.font = font\r\n\r\n        imu.onUpdate = (ui) => {\r\n            ui.Element({ id: 'lblTooltip', text: tooltip, rect: { x: 0, y: 0, w: 240, h: 10 }, color: '#f1f1f1ff', highlight: '#f1f1f1ff', bgcolor: '#cccccc00' })\r\n        }\r\n    }\r\n    imu.Draw()\r\n}\r\n\r\nexport { drawFrame }","import maps from './keymapping.json'\r\n\r\nvar listening = false\r\n\r\nfunction handlerPressed (button) {\r\n  setState(button, true)\r\n}\r\n\r\nfunction handlerReleased (button) {\r\n  setState(button, false)\r\n  if (callbacks[button]) {\r\n    callbacks[button](button)\r\n  }\r\n}\r\n\r\nfunction GetInputKeys(inputType) {\r\n  inputType = inputType.toLowerCase()\r\n  return Object.keys(maps[inputType])\r\n}\r\n\r\nfunction GetInputValue(inputType, key) {\r\n  inputType = inputType.toLowerCase()\r\n  return maps[inputType][key]\r\n}\r\n\r\nvar inputState = {}\r\nvar callbacks = {}\r\n\r\nvar enabled = [ 'keyboard', 'gamepad' ]\r\n\r\nfunction setState(button, value) {\r\n  inputState[button] = value\r\n}\r\n\r\nfunction getState(button) {\r\n  if (!listening) {\r\n    return false\r\n  }\r\n  return inputState[button] ? inputState[button] : false\r\n}\r\n\r\nfunction listenerKeyDown(e) {\r\n  if (!listening) {\r\n    return\r\n  }\r\n  let inputs = Object.keys(maps.keyboard)\r\n  for (let i in inputs) {\r\n    if (e.key === maps.keyboard[inputs[i]]) {\r\n      handlerPressed(inputs[i])\r\n    }\r\n  }\r\n}\r\n\r\nfunction listenerKeyUp(e) {\r\n  if (!listening) {\r\n    return\r\n  }\r\n  let inputs = Object.keys(maps.keyboard)\r\n  for (let i in inputs) {\r\n    if (e.key === maps.keyboard[inputs[i]]) {\r\n      handlerReleased(inputs[i])\r\n    }\r\n  }\r\n}\r\n\r\nfunction init() {\r\n  inputState = {}\r\n  callbacks = {}\r\n  if (enabled.includes('keyboard')) {\r\n    window.removeEventListener('keydown', listenerKeyDown)\r\n    window.removeEventListener('keyup', listenerKeyUp)\r\n    window.addEventListener('keydown', listenerKeyDown)\r\n    window.addEventListener(\"keyup\", listenerKeyUp)\r\n  }\r\n  if (enabled.includes('gamepad')) {\r\n    gameControl.on('connect', function(gamepad) {\r\n      let inputs = Object.keys(maps.gamepad)\r\n      for (let i in inputs) {\r\n        gamepad.on(maps.gamepad[inputs[i]], () => {\r\n          \r\n        }).after(maps.gamepad[inputs[i]], () => {\r\n          handlerReleased(inputs[i])\r\n        })\r\n      }\r\n    })\r\n  }\r\n  listening = false\r\n}\r\n\r\ninit()\r\n\r\nvar input = {\r\n  listen: () => {\r\n    listening = true\r\n  },\r\n  unlisten: () => {\r\n    listening = false\r\n  },\r\n  released: (button, method) => {\r\n    callbacks[button] = method\r\n  }\r\n}\r\n\r\nexport default input\r\nexport { GetInputKeys, GetInputValue }","import { Pipeline } from './pipeline.js'\r\n\r\nimport characters from \"./characters.json\"\r\n\r\nclass Character {\r\n    constructor(name) {\r\n        // data property holds base class data from json\r\n        try {\r\n            this.data = characters.filter(f => f.name === name)[0]\r\n            this.data.maxHp = this.data.hp\r\n            this.name = this.data.name\r\n            this.equipment = []\r\n        } catch {\r\n            this.data = {}\r\n            console.error(`Could not locate template for ${name}.`)\r\n        }\r\n\r\n        // effectModifiers property holds active effect modifiers.\r\n        this.effectModifiers = {}\r\n\r\n        // Active effect modifiers, evaluated each phase and removed when\r\n        // expired.\r\n        this.effects = []\r\n    }\r\n\r\n    /**\r\n     * Iterate over the effects currently active on this character and\r\n     * do housekeeping (decrement ttl, removing ttl = 0, etc.)\r\n     */\r\n    UpdateEffects() {\r\n        for (let e in this.effects) {\r\n            let effect = this.effects[e]\r\n            if (effect.ttl) {\r\n                effect.ttl--\r\n            }\r\n            if (effect.ttl <= 0) {\r\n                this.RemoveEffectModifier(effect)\r\n            }\r\n        }\r\n        this.effects = this.effects.filter(f => f.ttl > 0)\r\n    }\r\n\r\n    AddEffect(effect) {\r\n        if (effect.ttl) {\r\n            this.effects.push(effect)\r\n        }\r\n        if (effect.attribute !== undefined) {\r\n            this.AddEffectModifier(effect.attribute, effect.amount)\r\n        }\r\n    }\r\n    RemoveEffectModifier(effect) {\r\n        if (effect.attribute !== undefined) {\r\n            this.AddEffect(effect.attribute, effect.amount * -1)\r\n        }\r\n    }\r\n\r\n    AddEffectModifier(attribute, amount) {\r\n        if (this.effectModifiers[attribute] === undefined) {\r\n            this.effectModifiers[attribute] = 0\r\n        }\r\n        this.effectModifiers[attribute] += amount\r\n    }\r\n\r\n    EffectModifier(attribute) {\r\n        if (this.effectModifiers[attribute] !== undefined) {\r\n            return this.effectModifiers[attribute]\r\n        }\r\n        return 0\r\n    }\r\n\r\n    Name() {\r\n        return this.data.name\r\n    }\r\n\r\n    Cost() {\r\n        return this.data.Cost + this.EffectModifier('cost')\r\n    }\r\n\r\n    EquipmentAndAbilities(eqab) {\r\n        if (eqab !== undefined) {\r\n            this.data.equipAbilities = eqab\r\n        }\r\n        return this.data.equipAbilities + this.EffectModifier('equipAbilities')\r\n    }\r\n\r\n    GunnerySkill() {\r\n        return this.data.gunnerySkill + this.EffectModifier('gunnerySkill')\r\n    }\r\n\r\n    MeleeSkill() {\r\n        return this.data.meleeSkill + this.EffectModifier('meleeSkill')\r\n    }\r\n\r\n    Speed() {\r\n        return this.data.speed + this.EffectModifier('speed')\r\n    }\r\n\r\n    Hp() {\r\n        return this.data.hp + this.EffectModifier('hp')\r\n    }\r\n\r\n    MaxHp() {\r\n        return this.data.maxHp + this.EffectModifier('maxHp')\r\n    }\r\n}\r\n\r\n export { Character }","import input, { GetInputKeys, GetInputValue } from './input.js'\r\nimport { getContext, drawImage, getImage } from \"./images.js\"\r\nimport { Start, pointer } from './main.js'\r\nimport { Character } from './character.js'\r\nimport { buildSprite } from './sprites.js'\r\n\r\nimport menus from './menus.json'\r\nimport equipment from './equipment.json'\r\n\r\nlet imu = null\r\n\r\nlet ctx = null\r\n\r\nvar stars = 16\r\n\r\nvar squad = []\r\n\r\nvar background = buildSprite('background', 0, 0, 'idle')\r\n\r\nvar menu = null\r\nvar menuItems = []\r\nvar menuItem = {}\r\nvar currentMenuId = 'Main'\r\nvar currentMenuItem = 'Start'\r\nvar currentMenuColumn = 0\r\n\r\nvar currentCharacterEquip = null\r\n\r\nvar menuMethods = {\r\n    callback_OnRenderStars: (text, replacements) => {\r\n        return [stars.toString()]\r\n    },\r\n    callback_OnRenderHireSquad: (text, replacements) => {\r\n        return [squad.length]\r\n    },\r\n\r\n    callback_OnRenderCharacter: (text, replacements) => {\r\n        let name = text.split(' ')[0].replace('>', '')\r\n        return [(squad.filter(f => f.name === name).length)]\r\n    },\r\n\r\n    callback_HireCharacter: (text) => {\r\n        let name = text.split(' ')[0].replace('>', '')\r\n        let char = new Character(name)\r\n        if (stars - char.Cost() >= 0) {\r\n            squad.push(char)\r\n            stars -= char.Cost()\r\n        }\r\n    },\r\n\r\n    callback_StartGame: () => {\r\n        console.log('callback_StartGame')\r\n        Start()\r\n    },\r\n\r\n    callback_SelectCharacterEquip: (text) => {\r\n        currentCharacterEquip = text\r\n    },\r\n\r\n    callback_SetupEquipment: (text) => {\r\n        ChangeMenu('SetupEquipment')\r\n        let menu = menus.filter(f => f.id === 'SetupEquipment')[0]\r\n        let nextIndex = menu.Options.findIndex(f => f.text === 'Next')\r\n        menu.Options = [\r\n            ...squad.map((m, i) => {\r\n            return {\r\n                text: `${i + 1}. ${m.name}`,\r\n                onSelect: 'callback_SelectCharacterEquip',\r\n                width: 160,\r\n                column: 0\r\n            }}),\r\n            menu.Options[nextIndex]\r\n        ]\r\n    }\r\n}\r\n\r\nlet menuDx = 0\r\nlet menuDy = 0\r\n\r\nfunction Action(actionId) {\r\n    if (actionId.includes('callback_')) {\r\n        return menuMethods[actionId] ? menuMethods[actionId] : () => {}\r\n    } else if (actionId.includes('menu_')) {\r\n        let action = actionId.split('_')\r\n        ChangeMenu(action[1])\r\n    }\r\n    return () => {}\r\n}\r\n\r\nfunction ChangeMenu(id) {\r\n    input.unlisten()\r\n    currentMenuColumn = 0\r\n    currentMenuId = id\r\n    let menuItems = GetMenuItems(id)\r\n    input.listen()\r\n    menuItem = menuItems.filter(f => f.text === currentMenuItem)[0]\r\n}\r\n\r\nfunction GetMenuItems(menuId) {\r\n    let menu = GetMenu(menuId)\r\n    let items = menu.Options.filter(f => f.onSelect && (f.column === undefined || f.column === currentMenuColumn))\r\n    if (items.length > 0 && currentMenuItem === '') {\r\n        currentMenuItem = items[0].text\r\n    }\r\n    return items\r\n}\r\n\r\nfunction GetMenu(id) {\r\n    try {\r\n        return menus.filter(f => f.id === id)[0]\r\n    } catch { return null }\r\n}\r\n\r\nfunction StartMenu(id) {\r\n    input.listen()\r\n\r\n    input.released('moveDown', () => {\r\n        menu = GetMenu(currentMenuId)\r\n        menuItems = GetMenuItems(currentMenuId) //menu.Options.filter(f => f.onSelect)\r\n        menuItem = menuItems.filter(f => f.text === currentMenuItem)[0]\r\n        let index = menuItems.findIndex(f => f.text === currentMenuItem)\r\n        index++\r\n        if (index >= menuItems.length) {\r\n            index = 0\r\n        }\r\n        currentMenuItem = menuItems[index].text\r\n    })\r\n    input.released('moveUp', () => {\r\n        menu = GetMenu(currentMenuId)\r\n        menuItems = GetMenuItems(currentMenuId)//menu.Options.filter(f => f.onSelect)\r\n        menuItem = menuItems.filter(f => f.text === currentMenuItem)[0]\r\n        let index = menuItems.findIndex(f => f.text === currentMenuItem)\r\n        index--\r\n        if (index < 0) {\r\n            index = menuItems.length - 1\r\n        }\r\n        currentMenuItem = menuItems[index].text\r\n    })\r\n    input.released('attack', () => {\r\n        menu = GetMenu(currentMenuId)\r\n        menuItems = GetMenuItems(currentMenuId) //menu.Options.filter(f => f.onSelect)\r\n        try {\r\n            menuItem = menuItems.filter(f => f.text === currentMenuItem)[0]    \r\n            if (menuItem.onSelect) {\r\n                Action(menuItem.onSelect)(menuItem.text)\r\n            }\r\n        } catch {}\r\n    })\r\n}\r\n\r\nfunction drawFrame(delta) {\r\n    if (!ctx) {\r\n        ctx = getContext()\r\n    }\r\n    background.draw(0, 0)\r\n    background.update(delta)\r\n    drawUI(delta)\r\n}\r\n\r\nfunction OnRender(text, onRender) {\r\n    let arr = text.split(/{[0-9]}/)\r\n    let replacements = []\r\n    for (let r in arr) {\r\n        replacements.push(`{${r}}`)\r\n    }\r\n    let values = Action(onRender)(text, arr)\r\n    for (let v in values) {\r\n        text = text.replace(replacements[v], values[v])\r\n    }\r\n    return text\r\n}\r\n\r\nfunction drawUI(delta) {\r\n    if (!imu) {\r\n        imu = new imui.ImUI(ctx.canvas)\r\n        imu.font = font\r\n        \r\n        imu.onUpdate = (ui) => {\r\n            //ui.Element({ id: 'imgGamename', type: 'Image', x: 10, y: 10, image: getImage('title') })\r\n            let menu = GetMenu(currentMenuId)\r\n            let menuItems = menu.Options.sort((a, b) => b.column !== undefined ? b.column : 0 - a.column !== undefined ? a.column : 0)\r\n            //imu.RemoveElements()\r\n            let dy = menuDy + 30\r\n            for (let i in menuItems) {\r\n                let item = menuItems[i].text\r\n                let menuItem = menuItems[i]\r\n                let colr = item === currentMenuItem ? menu.Style.SelectColor : menuItem.onSelect ? menu.Style.SelectableColor : menu.Style.Color\r\n                let txt = `${currentMenuItem === item ? '>' : ' '}${item}${currentMenuItem === item ? '<' : ' ' }`\r\n                if (txt.includes('{') && txt.includes('}') && menuItem.onRender) {\r\n                    txt = OnRender(txt, menuItem.onRender)\r\n                }\r\n                let el = ui.Element({ id: 'lblMenu' + currentMenuId + item + i, text: txt, rect: { x: menuDx, y: dy, w: 64, h: 8 }, color: colr, highlight: colr, bgcolor: '#cccccc00' })\r\n\r\n                if (el.Hover()) {\r\n                    if (menuItem.onSelect) {\r\n                        currentMenuItem = item\r\n                    }\r\n                }\r\n                if (el.Clicked()) {\r\n                    if (menuItem.onSelect) {\r\n                        currentMenuItem = txt\r\n                        Action(menuItem.onSelect)(menuItem.text)\r\n                    }\r\n                }\r\n                dy += 12\r\n            }\r\n            if (currentMenuId === 'SetupEquipment') {\r\n                let elEquip = ui.Element({ id: 'lblEquipMenu', text: 'Squad Equipment', rect: { x: menuDx, y: menuDy + 15, w: 128, h: 8 }, color: menu.Style.Color, highlight: menu.Style.Color, bgcolor: '#cccccc00' })\r\n            }\r\n            if (currentCharacterEquip && currentMenuId === 'SetupEquipment') {\r\n                let tooltip = ''\r\n                dy = menuDy + 42\r\n                let colDx = 80\r\n                let charName = currentCharacterEquip.split('.')[1].trim()\r\n                let charIndex = parseInt(currentCharacterEquip.split('.')) - 1\r\n                let eqabPoints = squad[charIndex].EquipmentAndAbilities()\r\n                let elSelEquip = ui.Element({ id: 'lblSelEquip', text: `${charName}: Equip & Ability Points: ${eqabPoints}`, rect: { x: colDx, y: menuDy + 30, w: 128, h: 8 }, color: menu.Style.Color, highlight: menu.Style.Color, bgcolor: '#cccccc00' })\r\n                let equiplist = equipment.filter(f => f.characters.includes(charName))\r\n                for (let e in equiplist) {\r\n                    let equip = equiplist[e]\r\n                    let equipped = squad[charIndex].equipment.filter(f => equip.name === f.name)\r\n                    let colr = menu.Style.SelectableColor\r\n                    if (equipped.length > 0) {\r\n                        colr = menu.Style.Disabled\r\n                    }\r\n\r\n                    let el = ui.Element({ id: 'lblEquip' + currentMenuId + equip.name + e, text: equip.name, rect: { x: colDx, y: dy, w: 128, h: 8 }, color: colr, highlight: colr, bgcolor: '#cccccc00' })\r\n                    \r\n                    if (el.Hover()) {\r\n                        let attr = [`Attacks: ${equip.attacks}`, `Damage: ${equip.damage}`, `Range: ${equip.range}`, `Cost: ${equip.cost}`]\r\n                        if (equip.reload) {\r\n                            attr.push('Requires Reload')\r\n                        }\r\n                        tooltip = attr.join('\\n')\r\n                    }\r\n                    if (el.Clicked()) {\r\n                        if (equipped.length > 0) {\r\n                            squad[charIndex].equipment = squad[charIndex].equipment.filter(f => f.name !== equip.name)\r\n                            squad[charIndex].EquipmentAndAbilities(eqabPoints + equip.cost)\r\n                        } else {\r\n                            if (eqabPoints - equip.cost >= 0) {\r\n                                squad[charIndex].equipment.push(equip)\r\n                                squad[charIndex].EquipmentAndAbilities(eqabPoints - equip.cost)\r\n                            }\r\n                        }\r\n                    }\r\n                        \r\n                    dy += 12\r\n                    if (dy > 180) {\r\n                        dy = menuDy + 42\r\n                        colDx += 90\r\n                    }\r\n                }\r\n\r\n                if (tooltip) {\r\n                    ui.RemoveElement('lblTooltip')\r\n                    let tip = ui.Element({ id: 'lblTooltip', text: tooltip, x: pointer.x, y: pointer.y + 8, autosize: true, color: menu.Style.SelectableColor, highlight: menu.Style.SelectColor, bgcolor: '#000000dd' })\r\n                }\r\n            }\r\n        }\r\n    }\r\n    imu.Draw()\r\n}\r\n\r\nexport { drawFrame, StartMenu }","import images from './images.js'\r\nimport sfx from './sfx.js'\r\nimport music from './music.js'\r\nimport sprites from './sprites.js'\r\nimport { setContext, loadAllImages } from './images.js'\r\nimport { drawFrame as drawMain } from './mainScene.js'\r\nimport { drawFrame as drawMainMenu, StartMenu } from './menuScene.js'\r\nimport { set, setDictionary } from './grammar.js'\r\nimport input from './input.js'\r\n\r\nvar dateNow = Date.now()\r\nvar dateThen = Date.now()\r\n\r\nvar targetDelta = 16 // Roughly 60fps by default\r\n\r\nvar currentScene = 'mainMenu'\r\n\r\nvar pointer = { x: 0, y: 0 }\r\n\r\nfunction setTargetFrameRate(target) {\r\n    targetDelta = parseInt(1000 / target) // Number of ms divided by target fps\r\n}\r\n\r\nfunction requestAnimationFrame() {\r\n    dateNow = Date.now()\r\n    let delta = dateNow - dateThen\r\n    if (delta >= targetDelta) {\r\n        drawFrame(delta)\r\n        dateThen = dateNow\r\n    }\r\n    window.requestAnimationFrame(requestAnimationFrame)\r\n}\r\n\r\n/**\r\n * Draws the animation frame.\r\n * @param {number} delta Number of ms since last frame.\r\n */\r\nfunction drawFrame(delta) {\r\n    if (currentScene === 'mainMenu') {\r\n        drawMainMenu(delta)\r\n    } else if (currentScene === 'main') {\r\n        drawMain(delta)\r\n    }\r\n}\r\n\r\nasync function StartMainMenu() {\r\n    await loadAllImages()\r\n\r\n    let canvas = document.getElementById('maincanvas')\r\n    let ratio = canvas.width / canvas.height\r\n    canvas.style.height = window.innerHeight + 'px'\r\n    canvas.style.width = window.innerHeight * ratio + 'px'\r\n    window.addEventListener('resize', () => {\r\n        canvas.style.height = window.innerHeight + 'px'\r\n        canvas.style.width = window.innerHeight * ratio + 'px'\r\n      })\r\n        \r\n    canvas.addEventListener('mousemove', (e) => {\r\n        pointer.x = parseInt((e.clientX - canvas.offsetLeft) * (canvas.width / parseInt(canvas.style.width))) - 2\r\n        pointer.y = parseInt((e.clientY - canvas.offsetTop) * (canvas.height / parseInt(canvas.style.height)))\r\n    })\r\n\r\n    canvas.addEventListener('contextmenu', (e) => {\r\n        e.preventDefault()\r\n        return false\r\n    })     \r\n\r\n    setTargetFrameRate(60)\r\n    setContext(canvas.getContext('2d'))\r\n\r\n    StartMenu()\r\n\r\n    window.requestAnimationFrame(requestAnimationFrame)\r\n}\r\n\r\nasync function Start() {\r\n\r\n    input.unlisten()\r\n    let canvas = document.getElementById('maincanvas')\r\n    currentScene = 'main'\r\n\r\n    setTargetFrameRate(60)\r\n    setContext(canvas.getContext('2d'))\r\n\r\n    window.requestAnimationFrame(requestAnimationFrame)\r\n}\r\n\r\nexport { Start, StartMainMenu, pointer }"],"names":["root","factory","exports","module","define","amd","self","__webpack_require__","definition","key","o","Object","defineProperty","enumerable","get","obj","prop","prototype","hasOwnProperty","call","Symbol","toStringTag","value","ctx","setContext","context","getContext","getMsSinceMidnight","d","Date","setHours","imu","tooltip","listening","handlerReleased","button","setState","callbacks","inputState","enabled","listenerKeyDown","e","inputs","keys","i","listenerKeyUp","includes","window","removeEventListener","addEventListener","gameControl","on","gamepad","after","listen","unlisten","released","method","Character","constructor","name","this","data","f","maxHp","hp","equipment","console","error","effectModifiers","effects","UpdateEffects","effect","ttl","RemoveEffectModifier","filter","AddEffect","push","undefined","attribute","AddEffectModifier","amount","EffectModifier","Name","Cost","EquipmentAndAbilities","eqab","equipAbilities","GunnerySkill","gunnerySkill","MeleeSkill","meleeSkill","Speed","speed","Hp","MaxHp","stars","squad","background","x","y","pose","onComplete","Error","sprite","frames","framesImage","currentFrame","updateDelta","play","animation","animStartTime","anim","sprPose","default","imageName","length","sfx","getSfx","offsetx","offsety","srcRect","img","drawImage","image","w","h","async","Promise","resolve","reject","spr","ox","oy","spd","t","mx","my","handler","p","amt","start","end","setTimeout","delta","frameDelay","repeat","animDuration","SetAnimation","buildSprite","menuItems","menuItem","currentMenuId","currentMenuItem","currentMenuColumn","currentCharacterEquip","menuMethods","callback_OnRenderStars","text","replacements","toString","callback_OnRenderHireSquad","callback_OnRenderCharacter","split","replace","callback_HireCharacter","char","callback_StartGame","log","Start","callback_SelectCharacterEquip","callback_SetupEquipment","ChangeMenu","menu","id","nextIndex","Options","findIndex","map","m","onSelect","width","column","menuDx","menuDy","Action","actionId","GetMenuItems","menuId","items","GetMenu","OnRender","onRender","arr","r","values","v","dateNow","now","dateThen","targetDelta","currentScene","pointer","setTargetFrameRate","target","parseInt","requestAnimationFrame","draw","update","imui","ImUI","canvas","font","onUpdate","ui","sort","a","b","dy","item","colr","Style","SelectColor","SelectableColor","Color","txt","el","Element","rect","color","highlight","bgcolor","Hover","Clicked","colDx","charName","trim","charIndex","eqabPoints","equiplist","characters","equip","equipped","Disabled","attr","attacks","damage","range","cost","reload","join","RemoveElement","autosize","Draw","clearRect","StartMainMenu","promises","loadImage","filename","Image","onload","onerror","src","then","catch","allSettled","loadAllImages","document","getElementById","ratio","height","style","innerHeight","clientX","offsetLeft","clientY","offsetTop","preventDefault","index"],"sourceRoot":""}