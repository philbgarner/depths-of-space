{"version":3,"file":"bfont-imui.js","mappings":"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","sources":["webpack://imui/webpack/universalModuleDefinition","webpack://imui/external umd \"canvas\"","webpack://imui/webpack/bootstrap","webpack://imui/webpack/runtime/define property getters","webpack://imui/webpack/runtime/hasOwnProperty shorthand","webpack://imui/webpack/runtime/make namespace object","webpack://imui/./src/elements/Element.js","webpack://imui/./src/elements/FrameFlat.js","webpack://imui/./src/elements/Frame3d.js","webpack://imui/./src/elements/Button3d.js","webpack://imui/./src/elements/ButtonFlat.js","webpack://imui/./src/elements/TextBoxFlat.js","webpack://imui/./src/elements/List.js","webpack://imui/./src/elements/Image.js","webpack://imui/./src/elements/FrameImage.js","webpack://imui/./src/elements/ButtonImage.js","webpack://imui/./src/imui.js","webpack://imui/./src/elements.js"],"sourcesContent":["(function webpackUniversalModuleDefinition(root, factory) {\n\tif(typeof exports === 'object' && typeof module === 'object')\n\t\tmodule.exports = factory(require(\"canvas\"));\n\telse if(typeof define === 'function' && define.amd)\n\t\tdefine([\"canvas\"], factory);\n\telse if(typeof exports === 'object')\n\t\texports[\"imui\"] = factory(require(\"canvas\"));\n\telse\n\t\troot[\"imui\"] = factory(root[\"canvas\"]);\n})(self, (__WEBPACK_EXTERNAL_MODULE__517__) => {\nreturn ","module.exports = __WEBPACK_EXTERNAL_MODULE__517__;","// The module cache\nvar __webpack_module_cache__ = {};\n\n// The require function\nfunction __webpack_require__(moduleId) {\n\t// Check if module is in cache\n\tvar cachedModule = __webpack_module_cache__[moduleId];\n\tif (cachedModule !== undefined) {\n\t\treturn cachedModule.exports;\n\t}\n\t// Create a new module (and put it into the cache)\n\tvar module = __webpack_module_cache__[moduleId] = {\n\t\t// no module.id needed\n\t\t// no module.loaded needed\n\t\texports: {}\n\t};\n\n\t// Execute the module function\n\t__webpack_modules__[moduleId](module, module.exports, __webpack_require__);\n\n\t// Return the exports of the module\n\treturn module.exports;\n}\n\n","// define getter functions for harmony exports\n__webpack_require__.d = (exports, definition) => {\n\tfor(var key in definition) {\n\t\tif(__webpack_require__.o(definition, key) && !__webpack_require__.o(exports, key)) {\n\t\t\tObject.defineProperty(exports, key, { enumerable: true, get: definition[key] });\n\t\t}\n\t}\n};","__webpack_require__.o = (obj, prop) => (Object.prototype.hasOwnProperty.call(obj, prop))","// define __esModule on exports\n__webpack_require__.r = (exports) => {\n\tif(typeof Symbol !== 'undefined' && Symbol.toStringTag) {\n\t\tObject.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });\n\t}\n\tObject.defineProperty(exports, '__esModule', { value: true });\n};","import { createCanvas } from 'canvas'\r\nimport { BezierBlend, updateDelay } from '../imui.js'\r\n\r\nclass Element {\r\n    constructor(params) {\r\n        if (!params.id) {\r\n            throw new Error('Element must have unique id.')\r\n        }\r\n        this.id = params.id\r\n\r\n        this.autosize = params.autosize ? params.autosize : true\r\n        if (params.rect) {\r\n            this.autosize = false\r\n        }\r\n        this.rect = params.rect ? params.rect : { x: 0, y: 0, w: 0, h: 0 }\r\n        this.color = params.color ? params.color : '#ccccccff'\r\n        this.bgcolor = params.bgcolor ? params.bgcolor : undefined\r\n        this.text = params.text ? params.text : ''\r\n        this.prevText = this.text\r\n        this.parentRect = params.parentRect ? params.parentRect : null\r\n\r\n        this.anim = params.anim ? params.anim : null\r\n        \r\n        this.wrap = params.wrap ? params.wrap : ''\r\n\r\n        this.font = params.font ? params.font : imui.font\r\n\r\n        this.rect.x = params.x ? params.x : this.rect.x\r\n        this.rect.y = params.y ? params.y : this.rect.y\r\n\r\n        this.state = {\r\n            clicked: false,\r\n            mouseOver: false,\r\n            mouseDown: false,\r\n            mouseUp: false,\r\n            change: true\r\n        }\r\n        this.prevState = params.prevState ? params.prevState :\r\n            {\r\n                clicked: false,\r\n                mouseOver: false,\r\n                mouseDown: false,\r\n                mouseUp: false,\r\n                change: false\r\n            }\r\n\r\n    }\r\n\r\n    DidChangeState() {\r\n        return this.prevState.clicked !== this.state.clicked ||\r\n            this.prevState.mouseOver !== this.state.mouseOver ||\r\n            this.prevState.mouseDown !== this.state.mouseDown ||\r\n            this.prevState.mouseUp !== this.state.mouseUp ||\r\n            this.prevState.change !== this.state.change\r\n    }\r\n\r\n    BuildPreviousState() {\r\n        return {\r\n            clicked: this.state.clicked,\r\n            mouseOver: this.state.mouseOver,\r\n            mouseDown: this.state.mouseDown,\r\n            mouseUp: this.state.mouseUp,\r\n            change: this.state.change\r\n        }\r\n    }\r\n\r\n    InsideRect(x, y, rect) {\r\n        let r = rect ? rect : this.Rect()\r\n        return x >= r.x && x < r.x + r.w && y >= r.y && y < r.y + r.h\r\n    }\r\n\r\n    Clicked() { return this.state.clicked }\r\n    Hover() { return this.state.mouseOver }\r\n    MouseDown() { return this.state.mouseDown }\r\n    MouseUp() { return this.state.mouseUp }\r\n\r\n    setState(params) {\r\n        this.prevState = this.BuildPreviousState()\r\n        for (let p in params) {\r\n            this.state[p] = params[p]\r\n        }\r\n    }\r\n\r\n    Rect() {\r\n        let rect = {\r\n            x: this.rect.x,\r\n            y: this.rect.y,\r\n            w: this.rect.w,\r\n            h: this.rect.h\r\n        }\r\n        if (this.parentRect) {\r\n            rect.x += this.parentRect.x\r\n            rect.y += this.parentRect.y\r\n        }\r\n        return rect\r\n    }\r\n\r\n    Update(imui, eventHandled) {\r\n        let evt = false\r\n        //let cfont = this.font ? this.font : imui.font\r\n        // if (this.autosize) {\r\n        //     this.Rect().w = this.text.length * cfont.cwidth\r\n        //     this.Rect().h = cfont.cheight\r\n        //     if (this.text && this.text.length > 0) {\r\n        //         this.Rect().h = cfont.cheight * this.text.split('\\n').length\r\n        //     }\r\n        // }\r\n        if (this.state.clicked && this.id !== imui.active) {\r\n            imui.active = this.id\r\n            this.setState({ changed: true })\r\n            evt = true\r\n        }\r\n        if (imui.mousePos.x >= this.Rect().x && imui.mousePos.y >= this.Rect().y && imui.mousePos.x <= this.Rect().x + this.Rect().w && imui.mousePos.y <= this.Rect().y + this.Rect().h) {\r\n            if (this.state.mouseOver && this.state.clicked) {\r\n                this.setState({ mouseOver: true, clicked: false})\r\n                evt = true\r\n            } else if (!eventHandled) {\r\n                this.setState({ mouseOver: true })\r\n                evt = true\r\n            }\r\n            if (imui.mouseButton > 0 && !this.state.mouseDown) {\r\n                this.setState({ mouseDown: true, mouseButton: imui.mouseButton })\r\n                evt = true\r\n            } else if (imui.mouseButton === 0 && this.prevState.mouseDown) {\r\n                this.setState({ mouseUp: true, mouseDown: false })\r\n                evt = true\r\n            }\r\n        } else {\r\n            this.setState({ mouseOver: false, mouseDown: false, mouseUp: false, clicked: false })\r\n        }\r\n        if (imui.mouseButton === 0 && this.state.mouseUp) {\r\n            this.setState({ mouseUp: false, clicked: true })\r\n            imui.active = this.id\r\n            evt = true\r\n        }\r\n        if (this.text !== this.prevText) {\r\n            this.setState({ change: true })\r\n            this.prevText = this.text\r\n        } else {\r\n            this.setState({ change: false })\r\n        }        \r\n        \r\n        // anim: {\r\n        //     curve: 'bezier',\r\n        //     duration: 1000,\r\n        //     params: {\r\n        //         x: 0, y: 400\r\n        //     }\r\n        if (this.anim) {\r\n            if (this.anim.curve === 'bezier') {\r\n                this.anim.elapsed = this.anim.elapsed === undefined ? 0 : this.anim.elapsed\r\n                for (let param in this.anim.params) {\r\n                    let startVal = this.anim.params[param]\r\n                    this.anim.destination = this.anim.destination ? this.anim.destination : {}\r\n                    if (param === 'x' || param === 'y' || param === 'w' || param === 'h') {\r\n                        this.anim.destination[param] = this.anim.destination[param] !== undefined ? this.anim.destination[param] : this.rect[param]\r\n                        if (this.anim.destination[param] > startVal) {\r\n                            this.rect[param] = startVal + (this.anim.destination[param] - startVal) * BezierBlend(this.anim.elapsed / this.anim.duration)\r\n                        } else {\r\n                            this.rect[param] = startVal - (startVal - this.anim.destination[param]) * BezierBlend(this.anim.elapsed / this.anim.duration)\r\n                        }\r\n                        \r\n                    }\r\n                    \r\n                }\r\n                this.anim.elapsed += updateDelay\r\n                if (this.anim.elapsed >= this.anim.duration) {\r\n\r\n                    for (let param in this.anim.params) {\r\n                        if (param === 'x' || param === 'y' || param === 'w' || param === 'h') {\r\n                            this.rect[param] = this.anim.destination[param]\r\n                        }                        \r\n                    }\r\n\r\n                    if (this.anim.onComplete) {\r\n                        this.anim.onComplete(this)\r\n                    }\r\n                    this.anim = null\r\n                }\r\n            }\r\n        }\r\n        return evt\r\n    }\r\n\r\n    GetMaxTextWidth(font, txt) {\r\n        let lines = []\r\n        try {\r\n            if (typeof txt === 'number') {\r\n                txt = font.codepage.filter(f => f.codenumber === txt)[0].symbol\r\n            }\r\n            lines = txt.split('\\n')\r\n        } catch (e) {\r\n            console.log('Error splitting txt parameters: ', e, ' typeof txt =', typeof txt)\r\n        }\r\n        let w = 0\r\n        for (let l in lines) {\r\n            let line = lines[l]\r\n            let lineLen = 0\r\n            for (let c in line) {\r\n                let char = font.codepage.filter(f => f.symbol === line[c])\r\n                if (char.length > 0) {\r\n                    if (char[0].rect) {\r\n                        lineLen += char[0].rect.w\r\n                    }\r\n                }\r\n            }\r\n            if (lineLen > w) {\r\n                w = lineLen\r\n            }\r\n        }\r\n        return w\r\n    }\r\n\r\n    GetWrappedText(font, txt, rect) {\r\n        let lines = txt.split('\\n')\r\n        let wrapPos = parseInt(rect.w / font.cwidth)\r\n        let c = 0\r\n        while (this.GetMaxTextWidth(font, lines.join('\\n')) >= rect.w && c <= 100) {\r\n            let newLines = []\r\n            for (let l in lines) {\r\n                let lineWidth = lines[l].length * font.cwidth\r\n                if (lineWidth > rect.w) {\r\n                    newLines.push(lines[l].slice(0, wrapPos).trim(),\r\n                                    lines[l].slice(wrapPos, lines[l].length).trim())\r\n                } else {\r\n                    newLines.push(lines[l])\r\n                }\r\n            }\r\n            lines = newLines\r\n            c++\r\n        }\r\n        return lines.join('\\n')\r\n    }\r\n\r\n    GetWordWrappedText(font, txt, rect) {\r\n        let lines = txt.split('\\n')\r\n        let wrapPos = parseInt(rect.w / font.cwidth)\r\n        let c = 0\r\n        while (this.GetMaxTextWidth(font, lines.join('\\n')) >= rect.w && c <= 100) {\r\n            let newLines = []\r\n            for (let l in lines) {\r\n                let lineWidth = lines[l].length * font.cwidth\r\n                if (lineWidth > rect.w) {\r\n                    // newLines.push(lines[l].slice(0, wrapPos).trim(),\r\n                    //                 lines[l].slice(wrapPos, lines[l].length).trim())\r\n                    let line = lines[l].substring(0, wrapPos).split('').reverse().join('')\r\n                    let index = line.search(/\\s/)\r\n                    newLines.push(lines[l].slice(0, wrapPos - index).trim(),\r\n                                        lines[l].slice(wrapPos - index, lines[l].length).trim())\r\n                } else {\r\n                    newLines.push(lines[l])\r\n                }\r\n            }\r\n            lines = newLines\r\n            c++\r\n        }\r\n        return lines.join('\\n')\r\n    }\r\n\r\n    DoTextWrap(font) {\r\n        let txt = this.text ? this.text : ''\r\n\r\n        font = font ? font : bfontjs.Fonts().default\r\n        if (this.GetMaxTextWidth(font, txt) > this.Rect().w) {\r\n            if (this.wrap === 'clip') {\r\n                let rectCharWidth = Math.floor(this.Rect().w / font.cwidth)\r\n                txt = txt.substring(0, rectCharWidth)\r\n            } else if (this.wrap === 'ellipses') {\r\n                let rectCharWidth = Math.floor(this.Rect().w / font.cwidth)\r\n                txt = txt.substring(0, rectCharWidth - 3)\r\n                txt += '...'\r\n            } else if (this.wrap === 'wrap') {\r\n                txt = this.GetWrappedText(font, txt, this.Rect())\r\n            } else if (this.wrap === 'word-wrap') {\r\n                txt = this.GetWordWrappedText(font, txt, this.Rect())\r\n            }\r\n        }\r\n        txt = typeof txt === 'string' ? txt : ''\r\n        let wid = this.GetMaxTextWidth(font, txt)\r\n        let hgt = txt.split('\\n').length * font.cheight\r\n        let ret = { text: txt, w: wid > this.Rect().w ? wid : this.Rect().w, h: hgt > this.Rect().h ? hgt : this.Rect().h }\r\n        // if (this.autosize) {\r\n        //     this.rect = ret\r\n        // }\r\n        return ret\r\n    }\r\n\r\n    DrawText(imui, font, rect) {\r\n        let textcolor = this.color\r\n        if (this.id === imui.active) {\r\n            textcolor = this.highlight ? this.highlight : textcolor\r\n        }\r\n        let wrap = this.DoTextWrap(font)\r\n        imui.DrawTextFont(font, rect.x, rect.y, wrap.text, textcolor)\r\n        rect.h = wrap.h\r\n        rect.w = wrap.w\r\n    }\r\n\r\n    _Draw(imui, rect) {\r\n        if (this.bgcolor) {\r\n            imui.DrawRect(rect, this.bgcolor)\r\n        }\r\n        let cfont = this.font ? this.font : imui.font\r\n        this.DrawText(imui, cfont, rect)\r\n    }\r\n\r\n    Draw(imui) {\r\n        let ctx = imui.ctx\r\n        ctx.save()\r\n        if (this.parentRect) {\r\n            ctx.beginPath()\r\n            ctx.rect(this.parentRect.x, this.parentRect.y, this.parentRect.w, this.parentRect.h)\r\n            ctx.closePath()\r\n            ctx.clip()\r\n        }\r\n        this._Draw(imui, this.Rect())\r\n        ctx.restore()\r\n    }\r\n}\r\n\r\nexport default Element\r\n","import Element from './Element.js'\r\n\r\nclass FrameFlat extends Element {\r\n    constructor(params) {\r\n        super(params)\r\n        this.rect.h = parseInt(this.rect.h / 16) * 16\r\n        this.rect.w = parseInt(this.rect.w / 9) * 9\r\n\r\n        if (params.drawBuffer) {\r\n            this.InitializeBuffer({x: 9, y: 32})\r\n        }\r\n    }\r\n\r\n    _Draw(imui, rect) {\r\n        if (this.bgcolor) {\r\n            imui.DrawRect(rect, this.bgcolor)\r\n        }\r\n        let txt = this.text.length > (rect.w - 2) / imui.font.cwidth ? this.text.substr(0, parseInt((rect.w - 2) / imui.font.cwidth)) : this.text\r\n\r\n        let borderRect = { x: rect.x + imui.font.cwidth / 2, y: rect.y + imui.font.cheight / 2, w: rect.w - imui.font.cwidth, h: rect.h - imui.font.cheight}\r\n        imui.StrokeRect(borderRect, this.color)\r\n\r\n        imui.DrawText(rect.x + imui.font.cwidth, rect.y + imui.font.cheight, txt, this.color)\r\n    }\r\n}\r\n\r\nexport default FrameFlat","import Element from './Element.js'\r\n\r\nclass Frame3d extends Element {\r\n    constructor(params) {\r\n        super(params)\r\n        this.rect.h = parseInt(this.rect.h / 16) * 16\r\n        this.rect.w = parseInt(this.rect.w / 9) * 9\r\n\r\n        if (params.drawBuffer) {\r\n            this.InitializeBuffer({x: 9, y: 32})\r\n        }\r\n    }\r\n\r\n    _Draw(imui, rect) {\r\n        if (this.bgcolor) {\r\n            imui.DrawRect(rect, this.bgcolor)\r\n        }\r\n        let txt = this.text.length > (rect.w - 2) / imui.font.cwidth ? this.text.substr(0, parseInt((rect.w - 2) / imui.font.cwidth)) : this.text\r\n\r\n        let borderRect = { x: rect.x + imui.font.cwidth / 2, y: rect.y + imui.font.cheight / 2, w: rect.w - imui.font.cwidth, h: rect.h - imui.font.cheight}\r\n\r\n        let highlight = !this.inverted ? this.highlight : this.shadow\r\n        let shadow = !this.inverted ? this.shadow : this.highlight\r\n\r\n        imui.StrokeLine(borderRect.x, borderRect.y, borderRect.x + borderRect.w, borderRect.y, highlight)\r\n        imui.StrokeLine(borderRect.x + borderRect.w, borderRect.y, borderRect.x + borderRect.w, borderRect.y + borderRect.h, highlight)\r\n        imui.StrokeLine(borderRect.x, borderRect.y + borderRect.h, borderRect.x + borderRect.w, borderRect.y + borderRect.h, shadow)\r\n        imui.StrokeLine(borderRect.x, borderRect.y, borderRect.x, borderRect.y + borderRect.h, shadow)\r\n\r\n        imui.DrawText(rect.x + imui.font.cwidth, rect.y + imui.font.cheight, txt, this.color)\r\n    }\r\n}\r\n\r\nexport default Frame3d","import Element from './Element.js'\r\n\r\nclass Button3d extends Element {\r\n    constructor(params) {\r\n        super(params)\r\n        this.rect.h = parseInt(this.rect.h / 16) * 16\r\n        this.rect.w = parseInt(this.rect.w / 9) * 9\r\n\r\n        if (params.drawBuffer) {\r\n            this.InitializeBuffer({x: 9, y: 32})\r\n        }\r\n    }\r\n\r\n    _Draw(imui, rect) {\r\n        if (this.bgcolor) {\r\n            imui.DrawRect(rect, this.bgcolor)\r\n        }\r\n        let txt = this.text.length > (rect.w - 2) / imui.font.cwidth ? this.text.substr(0, parseInt((rect.w - 2) / imui.font.cwidth)) : this.text\r\n\r\n        let borderRect = { x: rect.x + imui.font.cwidth / 2, y: rect.y + imui.font.cheight / 2, w: rect.w - imui.font.cwidth, h: rect.h - imui.font.cheight}\r\n        \r\n        let inverted = this.inverted ? this.inverted : false\r\n        if (this.state.mouseDown) {\r\n            inverted = true\r\n        }\r\n\r\n        let highlight = !inverted ? this.highlight : this.shadow\r\n        let shadow = !inverted ? this.shadow : this.highlight\r\n\r\n        imui.StrokeLine(borderRect.x, borderRect.y, borderRect.x + borderRect.w, borderRect.y, highlight)\r\n        imui.StrokeLine(borderRect.x + borderRect.w, borderRect.y, borderRect.x + borderRect.w, borderRect.y + borderRect.h, highlight)\r\n        imui.StrokeLine(borderRect.x, borderRect.y + borderRect.h, borderRect.x + borderRect.w, borderRect.y + borderRect.h, shadow)\r\n        imui.StrokeLine(borderRect.x, borderRect.y, borderRect.x, borderRect.y + borderRect.h, shadow)\r\n\r\n        let mx = 0, my = 0\r\n        if (this.state.mouseDown) {\r\n            mx = parseInt(imui.font.cwidth * 0.3)\r\n            my = parseInt(imui.font.cheight * 0.1)\r\n        }\r\n        imui.DrawText(borderRect.x + mx + borderRect.w / 2 - (txt.length * imui.font.cwidth) / 2, borderRect.y + my + borderRect.h / 2 - imui.font.cheight / 2, txt, this.color)\r\n    }\r\n}\r\n\r\nexport default Button3d","import Element from './Element.js'\r\n\r\nclass ButtonFlat extends Element {\r\n    constructor(params) {\r\n        super(params)\r\n        this.rect.h = parseInt(this.rect.h / 16) * 16\r\n        this.rect.w = parseInt(this.rect.w / 9) * 9\r\n\r\n        this.leftChar = params.leftChar ? params.leftChar : '<'\r\n        this.rightChar = params.rightChar ? params.rightChar : '>'\r\n\r\n        if (params.drawBuffer) {\r\n            this.InitializeBuffer({x: 9, y: 32})\r\n        }\r\n    }\r\n\r\n    _Draw(imui, rect) {\r\n        let txt = this.text.length > (rect.w - 2) / imui.font.cwidth ? this.text.substr(0, parseInt((rect.w - 2) / imui.font.cwidth)) : this.text\r\n\r\n        let textcolor = this.color\r\n        let bgcolor = this.bgcolor\r\n\r\n        if (this.state.mouseOver && !this.state.mouseDown && this.highlight) {\r\n            textcolor = this.highlight\r\n        }\r\n\r\n        if (bgcolor) {\r\n            if (this.state.mouseDown) {\r\n                textcolor = this.bgcolor\r\n                bgcolor = this.color\r\n            }\r\n\r\n            imui.DrawRect(rect, bgcolor)\r\n        }\r\n        if (this.id === imui.active) {\r\n            textcolor = this.highlight ? this.highlight : textcolor\r\n        }\r\n\r\n        imui.DrawText(rect.x + rect.w / 2 - (txt.length * imui.font.cwidth) / 2, rect.y + rect.h / 2 - imui.font.cheight / 2, txt, textcolor)\r\n\r\n        imui.DrawText(rect.x, rect.y + rect.h / 2 - imui.font.cheight / 2, this.leftChar, textcolor)\r\n        imui.DrawText(rect.x + rect.w - imui.font.cwidth, rect.y + rect.h / 2 - imui.font.cheight / 2, this.rightChar, textcolor)\r\n    }\r\n}\r\n\r\nexport default ButtonFlat","import Element from './Element.js'\r\n\r\nclass TextBoxFlat extends Element {\r\n    constructor(params) {\r\n        super(params)\r\n        this.text = params.defaultText ? params.defaultText : ''\r\n        this.font = params.font ? params.font : null\r\n\r\n        if (this.font) {\r\n            this.rect.h = parseInt((this.rect.h / this.font.cheight) * this.font.cheight)\r\n            this.rect.w = this.GetMaxTextWidth(this.font, this.text)\r\n        } else {\r\n            this.rect.w = 8\r\n            this.rect.h = 8\r\n        }\r\n            \r\n        this.editable = params.editable ? params.editable : true\r\n\r\n        if (params.drawBuffer) {\r\n            this.InitializeBuffer({x: 9, y: 32})\r\n        }\r\n    }\r\n\r\n    Text() { return this.text }\r\n\r\n    _Draw(imui, rect) {\r\n        if (!this.font) {\r\n            this.font = imui.font\r\n        }\r\n        let txt = this.text\r\n\r\n        let textcolor = this.color\r\n        let bgcolor = this.bgcolor\r\n\r\n        if (this.state.mouseOver && !this.state.mouseDown && this.highlight) {\r\n            textcolor = this.highlight\r\n        }\r\n\r\n        if (bgcolor) {\r\n            if (this.state.mouseDown) {\r\n                textcolor = this.bgcolor\r\n                bgcolor = this.color\r\n            }\r\n\r\n            imui.DrawRect(rect, bgcolor)\r\n        }\r\n\r\n        if (this.id === imui.active) {\r\n            textcolor = this.highlight ? this.highlight : textcolor\r\n            if (Date.now() % 1000 > 500) {\r\n                imui.DrawTextFont(this.font, rect.x + this.GetMaxTextWidth(this.font, `${txt}`), rect.y + rect.h / 2 - this.font.cheight / 2, '_', textcolor)\r\n            }\r\n        }\r\n        imui.DrawTextFont(this.font, rect.x, rect.y + rect.h / 2 - this.font.cheight / 2, txt, textcolor)\r\n    }\r\n}\r\n\r\nexport default TextBoxFlat","import Element from './Element.js'\r\n\r\nclass List extends Element {\r\n    constructor(params) {\r\n        super(params)\r\n        this.rect.h = parseInt(this.rect.h / 16) * 16\r\n        this.rect.w = parseInt(this.rect.w / 9) * 9\r\n\r\n        this.bgScrollbar = params.bgScrollbar ? params.bgScrollbar : '#645355ff'\r\n        this.list = params.list ? params.list : []\r\n        this.currentItem = null\r\n        this.scrollOffset = params.scrollOffset ? params.scrollOffset : 0\r\n        this.topDown = params.topDown ? params.topDown : true\r\n        this.horizontal = params.horizontal ? params.horizontal : false\r\n        this.scrollbar = params.scrollbar ? params.scrollbar : true\r\n\r\n        this.scrollbarCharacters = {\r\n            scrollUp: params.scrollUp ? params.scrollUp : 252,\r\n            scrollDown: params.scrollDown ? params.scrollDown : 253,\r\n            scrollCaret: params.scrollCaret ? params.scrollCaret : 254\r\n        }\r\n\r\n        this.draggingCaret = false\r\n    }\r\n\r\n    _Draw(imui, rect) {\r\n        let textcolor = this.color\r\n        let bgcolor = this.bgcolor\r\n\r\n        if (this.state.mouseOver && !this.state.mouseDown && this.highlight) {\r\n            textcolor = this.highlight\r\n        }\r\n\r\n        if (bgcolor) {\r\n            imui.DrawRect(rect, bgcolor)\r\n        }\r\n\r\n        let dx = rect.x + imui.font.cwidth\r\n        let dy = rect.y\r\n        for (let l = this.scrollOffset; l < this.list.length; l++) {\r\n            let txt = this.list[l]\r\n\r\n            let txtRect = { x: dx, y: dy, w: txt.length * imui.font.cwidth, h: imui.font.cheight }\r\n            let isHoverItem = this.state.mouseOver &&\r\n                imui.mousePos.y >= txtRect.y && imui.mousePos.x >= txtRect.x &&\r\n                imui.mousePos.x < txtRect.x + txtRect.w && imui.mousePos.y < txtRect.y + txtRect.h\r\n            let isMouseDownItem = this.state.mouseDown && imui.mousePos.y >= txtRect.y && imui.mousePos.x >= txtRect.x &&\r\n                    imui.mousePos.x < txtRect.x + txtRect.w && imui.mousePos.y < txtRect.y + txtRect.h\r\n            if (isMouseDownItem) {\r\n                this.currentItem = l\r\n            }\r\n\r\n            imui.DrawText(dx, dy, txt, isHoverItem ? textcolor : this.color, isHoverItem || this.currentItem === l ? { background: { colour: isMouseDownItem ? '#ccccccff' : this.bgScrollbar }} : undefined)\r\n            if (!this.horizontal) {\r\n                dy += imui.font.cheight\r\n            } else {\r\n                dx += imui.font.cwidth * (txt.length + 1)\r\n            }\r\n            if (dx > rect.x + rect.w) {\r\n                break\r\n            }\r\n            if (dy + imui.font.cheight > rect.y + rect.h) {\r\n                break\r\n            }\r\n        }\r\n        \r\n        if (this.rect.h < imui.font.cheight * this.list.length && !this.horizontal) {\r\n            let upRect = { x: rect.x + rect.w - imui.font.cwidth, y: rect.y, w: imui.font.cwidth, h: imui.font.cheight}\r\n            let downRect = { x: rect.x + rect.w - imui.font.cwidth, y: rect.y + rect.h - imui.font.cheight, w: imui.font.cwidth, h: imui.font.cheight}\r\n            let scrollBarRect = { x: rect.x + rect.w - imui.font.cwidth, y: rect.y + imui.font.cheight, w: imui.font.cwidth, h: rect.h - (imui.font.cheight * 2) }\r\n            imui.DrawRect(scrollBarRect, this.bgScrollbar)\r\n            imui.DrawText(upRect.x, upRect.y, this.scrollbarCharacters.scrollUp, this.InsideRect(imui.mousePos.x, imui.mousePos.y, upRect) && this.state.mouseDown ? this.highlight : this.color, \r\n                this.InsideRect(imui.mousePos.x, imui.mousePos.y, upRect) && this.state.mouseDown ? { background: { colour: this.color } } : { background: { colour: this.bgScrollbar } })\r\n            imui.DrawText(downRect.x, downRect.y, this.scrollbarCharacters.scrollDown, this.InsideRect(imui.mousePos.x, imui.mousePos.y, downRect) && this.state.mouseDown ? this.highlight : this.color, \r\n                this.InsideRect(imui.mousePos.x, imui.mousePos.y, downRect) && this.state.mouseDown ? { background: { colour: this.color } } : { background: { colour: this.bgScrollbar } })\r\n\r\n            let caretPos = (this.scrollOffset / (this.list.length - 1)) * scrollBarRect.h\r\n            let caretColr = this.color\r\n            let caretBg = this.bgScrollbar\r\n\r\n            if (!this.draggingCaret) {\r\n                if (this.InsideRect(imui.mousePos.x, imui.mousePos.y, upRect) && this.Clicked()) {\r\n                    if (this.scrollOffset !== null) {\r\n                        this.scrollOffset = this.scrollOffset - 1 < 0 ? 0: this.scrollOffset - 1\r\n                    }\r\n                } else if (this.InsideRect(imui.mousePos.x, imui.mousePos.y, downRect) && this.Clicked()) {\r\n                    if (this.scrollOffset !== null) {\r\n                        this.scrollOffset = this.scrollOffset + 1 > this.list.length - 1 ? this.list.length - 1: this.scrollOffset + 1\r\n                    }\r\n                } else if (this.InsideRect(imui.mousePos.x, imui.mousePos.y, { x: scrollBarRect.x, y: scrollBarRect.y + caretPos, w: scrollBarRect.w, h: imui.font.cwidth}) && this.state.mouseDown) {\r\n                    this.draggingCaret = true\r\n                } else if (this.InsideRect(imui.mousePos.x, imui.mousePos.y, scrollBarRect) && this.Clicked()) {\r\n                    if (this.scrollOffset !== null) {\r\n                        if (imui.mousePos.y < scrollBarRect.y + caretPos) {\r\n                            this.scrollOffset = this.scrollOffset - 10 > 0 ? this.scrollOffset - 10 : 0\r\n                        } else if (imui.mousePos.y > scrollBarRect.y + caretPos + imui.font.cheight) {\r\n                            this.scrollOffset = this.scrollOffset + 10 < this.list.length - 1 ? this.scrollOffset + 10 : this.list.length - 1\r\n                        }\r\n                    }\r\n                }\r\n            } else if (this.draggingCaret && this.state.mouseDown) {\r\n                this.scrollOffset = parseInt(((imui.mousePos.y - scrollBarRect.y) / scrollBarRect.h) * (this.list.length - 2))\r\n                if (this.scrollOffset < 0) {\r\n                    this.scrollOffset = 0\r\n                } else if (this.scrollOffset > this.list.length - 1) {\r\n                    this.scrollOffset = this.list.length - 1\r\n                }\r\n                caretBg = this.color\r\n                caretColr = this.bgScrollbar\r\n            } else if (this.draggingCaret) {\r\n                this.draggingCaret = false\r\n            }\r\n            let caretHovered = this.InsideRect(imui.mousePos.x, imui.mousePos.y, { x: scrollBarRect.x, y: scrollBarRect.y + caretPos, w: scrollBarRect.w, h: imui.font.cwidth})\r\n            imui.DrawText(scrollBarRect.x, scrollBarRect.y + caretPos, this.scrollbarCharacters.scrollCaret, caretHovered ? this.highlight : caretColr, { background: { colour: caretBg } })\r\n        }\r\n    }\r\n}\r\n\r\nexport default List","import Element from './Element.js'\r\n\r\nclass Image extends Element {\r\n    constructor(params) {\r\n        super(params)\r\n\r\n        this.image = params.image ? params.image : null\r\n        if (!this.rect.w || !this.rect.h) {\r\n            this.rect.h = this.image.height\r\n            this.rect.w = this.image.width\r\n        }\r\n    }\r\n\r\n    _Draw(imui, rect) {\r\n        if (this.image) {\r\n            if (this.image.tagName === 'IMG') {\r\n                imui.ctx.drawImage(this.image, this.Rect().x, this.Rect().y, this.Rect().w, this.Rect().h)\r\n            } else if (this.image.draw) {\r\n                this.image.draw()\r\n            }\r\n        }\r\n    }\r\n}\r\n\r\nexport default Image","import Element from './Element.js'\r\n\r\nclass FrameImage extends Element {\r\n    constructor(params) {\r\n        super(params)\r\n\r\n        this.image = params.image ? params.image : null\r\n        if (params.innerRect) {\r\n            this.innerRect = params.innerRect\r\n        } else if (params.borderWidth) {\r\n            this.innerRect = {\r\n                x: params.borderWidth,\r\n                y: params.borderWidth,\r\n                w: this.rect.w - params.borderWidth * 2,\r\n                h: this.rect.h - params.borderWidth * 2\r\n            }\r\n        } else {\r\n            this.innerRect = {\r\n                x: 0, y: 0,\r\n                w: this.rect.w, h: this.rect.h\r\n            }\r\n        }\r\n    }\r\n\r\n    _Draw(imui, rect) {\r\n        if (this.bgcolor) {\r\n            imui.DrawRect(rect, this.bgcolor)\r\n        }\r\n\r\n        if (this.image) {\r\n            // Top Left Corner\r\n            imui.ctx.drawImage(this.image, 0, 0, this.innerRect.x, this.innerRect.y, this.rect.x, this.rect.y, this.innerRect.x, this.innerRect.y)\r\n            // Top Right Corner\r\n            imui.ctx.drawImage(this.image, this.image.width - this.innerRect.x, 0, this.innerRect.x, this.innerRect.y, this.rect.x + this.rect.w - this.innerRect.x, this.rect.y, this.innerRect.x, this.innerRect.y)\r\n            // Bottom Left Corner\r\n            imui.ctx.drawImage(this.image, 0, this.image.height - this.innerRect.y, this.innerRect.x, this.innerRect.y, this.rect.x, this.rect.y + this.rect.h - this.innerRect.y, this.innerRect.x, this.innerRect.y)\r\n            // Bottom Right Corner\r\n            imui.ctx.drawImage(this.image, this.image.width - this.innerRect.x, this.image.height - this.innerRect.y, this.innerRect.x, this.innerRect.y, this.rect.x + this.rect.w - this.innerRect.x, this.rect.y + this.rect.h - this.innerRect.y, this.innerRect.x, this.innerRect.y)\r\n\r\n            // Top Middle Section\r\n            for (let dx = this.rect.x + this.innerRect.x; dx < this.rect.x + this.rect.w - this.innerRect.x; dx += this.image.width - this.innerRect.x * 2) {\r\n                let dw = this.image.width - this.innerRect.x * 2\r\n                if (dx + dw > this.rect.x + this.rect.w - this.innerRect.x) {\r\n                    dw = this.rect.x + this.rect.w - this.innerRect.x - dx\r\n                }\r\n                imui.ctx.drawImage(this.image, this.innerRect.x, 0, dw, this.innerRect.y, dx, this.rect.y, dw, this.innerRect.y)\r\n            }\r\n            // Bottom Middle Section\r\n            for (let dx = this.rect.x + this.innerRect.x; dx < this.rect.x + this.rect.w - this.innerRect.x; dx += this.image.width - this.innerRect.x * 2) {\r\n                let dw = this.image.width - this.innerRect.x * 2\r\n                if (dx + dw > this.rect.x + this.rect.w - this.innerRect.x) {\r\n                    dw = this.rect.x + this.rect.w - this.innerRect.x - dx\r\n                }\r\n                imui.ctx.drawImage(this.image, this.innerRect.x, this.image.height - this.innerRect.y, dw, this.innerRect.y, dx, this.rect.y + this.rect.h - this.innerRect.y, dw, this.innerRect.y)\r\n            }\r\n\r\n            // Left Middle Section\r\n            for (let dy = this.rect.y + this.innerRect.y; dy < this.rect.y + this.rect.h - this.innerRect.y; dy += this.image.height - this.innerRect.y * 2) {\r\n                let dh = this.image.height - this.innerRect.y * 2\r\n                if (dy + dh > this.rect.y + this.rect.h - this.innerRect.y) {\r\n                    dh = this.rect.y + this.rect.h - this.innerRect.y - dy\r\n                }\r\n                imui.ctx.drawImage(this.image, 0, this.innerRect.y, this.innerRect.x, dh, this.rect.x, dy, this.innerRect.x, dh)\r\n            }\r\n            // Right Middle Section\r\n            for (let dy = this.rect.y + this.innerRect.y; dy < this.rect.y + this.rect.h - this.innerRect.y; dy += this.image.height - this.innerRect.y * 2) {\r\n                let dh = this.image.height - this.innerRect.y * 2\r\n                if (dy + dh > this.rect.y + this.rect.h - this.innerRect.y) {\r\n                    dh = this.rect.y + this.rect.h - this.innerRect.y - dy\r\n                }\r\n                imui.ctx.drawImage(this.image, this.image.width - this.innerRect.x, this.innerRect.y, this.innerRect.x, dh, this.rect.x + this.rect.w - this.innerRect.x, dy, this.innerRect.x, dh)\r\n            }\r\n\r\n            // Centre\r\n            let sx = this.innerRect.x\r\n            let sy = this.innerRect.y\r\n            let sw = this.image.width - this.innerRect.x * 2\r\n            let sh = this.image.height - this.innerRect.y * 2\r\n            let dx = this.innerRect.x + this.rect.x\r\n            let dy = this.innerRect.y + this.rect.y\r\n            while (dy < this.rect.y + this.rect.h - this.innerRect.y) {\r\n                let w = sw\r\n                let h = sh\r\n                if (dx + w > this.rect.x + this.rect.w - this.innerRect.x) {\r\n                    w = this.rect.x + this.rect.w - this.innerRect.x - dx\r\n                }\r\n                if (dy + h > this.rect.y + this.rect.h - this.innerRect.y) {\r\n                    h = this.rect.y + this.rect.h - this.innerRect.y - dy\r\n                }\r\n                imui.ctx.drawImage(this.image, sx, sy, w, h, dx, dy, w, h)\r\n                dx += sw\r\n                if (dx > this.rect.x + this.rect.w - this.innerRect.x) {\r\n                    dx = this.innerRect.x + this.rect.x\r\n                    dy += sh\r\n                }\r\n            }\r\n        }\r\n        let txt = this.text.length > (rect.w - 2) / imui.font.cwidth ? this.text.substr(0, parseInt((rect.w - 2) / imui.font.cwidth)) : this.text\r\n\r\n        imui.DrawText(rect.x + this.innerRect.x, rect.y + this.innerRect.y, txt, this.color)\r\n    }\r\n}\r\n\r\nexport default FrameImage","import Element from './Element.js'\r\n\r\nclass ButtonImage extends Element {\r\n    constructor(params) {\r\n        super(params)\r\n\r\n        this.image = params.image ? params.image : null\r\n        this.imageDown = params.imageDown ? params.imageDown : null\r\n        this.imageHover = params.imageHover ? params.imageHover : null\r\n        \r\n        this.pressedOffsetY = params.pressedOffsetY ? params.pressedOffsetY : 2\r\n\r\n        if (params.innerRect) {\r\n            this.innerRect = params.innerRect\r\n        } else if (params.borderWidth) {\r\n            this.innerRect = {\r\n                x: params.borderWidth,\r\n                y: params.borderWidth,\r\n                w: this.Rect().w - params.borderWidth * 2,\r\n                h: this.Rect().h - params.borderWidth * 2\r\n            }\r\n        } else {\r\n            this.innerRect = {\r\n                x: 0, y: 0,\r\n                w: this.Rect().w, h: this.Rect().h\r\n            }\r\n        }\r\n    }\r\n\r\n    drawImageSlice(imui, image) {\r\n        if (image) {\r\n            // Top Left Corner\r\n            imui.ctx.drawImage(image, 0, 0, this.innerRect.x, this.innerRect.y, this.Rect().x, this.Rect().y, this.innerRect.x, this.innerRect.y)\r\n            \r\n            // Top Right Corner\r\n            let x2 = image.width - (this.innerRect.x + this.innerRect.w)\r\n            imui.ctx.drawImage(image, image.width - x2, 0, x2, this.innerRect.y, this.Rect().x + this.Rect().w - x2, this.Rect().y, x2, this.innerRect.y)\r\n\r\n            // Bottom Right Corner\r\n            let y2 = image.height - (this.innerRect.y + this.innerRect.h)\r\n            imui.ctx.drawImage(image, image.width - x2, image.height - y2, x2, y2, this.Rect().x + this.Rect().w - x2, this.Rect().y + this.Rect().h - y2, x2, y2)\r\n\r\n            // Bottom Left Corner\r\n            imui.ctx.drawImage(image, 0, image.height - y2, this.innerRect.x, y2, this.Rect().x, this.Rect().y + this.Rect().h - y2, this.innerRect.x, y2)\r\n\r\n            // Top Middle Section\r\n            for (let dx = this.Rect().x + this.innerRect.x; dx < this.Rect().x + this.Rect().w - x2; dx += this.innerRect.w) {\r\n                let dw = image.width - x2\r\n                if (dx + dw > this.Rect().x + this.Rect().w - x2) {\r\n                    dw = this.Rect().x + this.Rect().w - x2 - dx\r\n                }\r\n                imui.ctx.drawImage(image, this.innerRect.x, 0, dw, this.innerRect.y, dx, this.Rect().y, dw, this.innerRect.y)\r\n            }\r\n            // Bottom Middle Section\r\n            for (let dx = this.Rect().x + this.innerRect.x; dx < this.Rect().x + this.Rect().w - x2; dx += this.innerRect.w) {\r\n                let dw = image.width - x2\r\n                if (dx + dw > this.Rect().x + this.Rect().w - x2) {\r\n                    dw = this.Rect().x + this.Rect().w - x2 - dx\r\n                }\r\n                imui.ctx.drawImage(image, this.innerRect.x, image.height - y2, dw, y2, dx, this.Rect().y + this.Rect().h - y2, dw, y2)\r\n            }\r\n\r\n            // Left Middle Section\r\n            for (let dy = this.Rect().y + this.innerRect.y; dy < this.Rect().y + this.Rect().h - y2; dy += this.innerRect.h) {\r\n                let dh = image.height - y2\r\n                if (dy + dh > this.Rect().y + this.Rect().h - y2) {\r\n                    dh = this.Rect().y + this.Rect().h - y2 - dy\r\n                }\r\n                imui.ctx.drawImage(image, 0, this.innerRect.y, this.innerRect.x, dh, this.Rect().x, dy, this.innerRect.x, dh)\r\n            }\r\n            // Right Middle Section\r\n            for (let dy = this.Rect().y + this.innerRect.y; dy < this.Rect().y + this.Rect().h - y2; dy += this.innerRect.h) {\r\n                let dh = image.height - y2\r\n                if (dy + dh > this.Rect().y + this.Rect().h - y2) {\r\n                    dh = this.Rect().y + this.Rect().h - y2 - dy\r\n                }\r\n                imui.ctx.drawImage(image, image.width - x2, this.innerRect.y, x2, dh, this.Rect().x + this.Rect().w - x2, dy, x2, dh)\r\n            }\r\n\r\n            // Centre\r\n            \r\n            let sx = this.innerRect.x\r\n            let sy = this.innerRect.y\r\n            let sw = this.innerRect.w\r\n            let sh = this.innerRect.h\r\n            let dx = this.innerRect.x + this.Rect().x\r\n            let dy = this.innerRect.y + this.Rect().y\r\n            while (dy < this.Rect().y + this.Rect().h - y2) {\r\n                let w = sw\r\n                let h = sh\r\n                if (dx + w > this.Rect().x + this.Rect().w - x2) {\r\n                    w = this.Rect().x + this.Rect().w - x2 - dx\r\n                }\r\n                if (dy + h > this.Rect().y + this.Rect().h - y2) {\r\n                    h = this.Rect().y + this.Rect().h - y2 - dy\r\n                }\r\n                imui.ctx.drawImage(image, sx, sy, w, h, dx, dy, w, h)\r\n                dx += sw\r\n                if (dx > this.Rect().x + this.Rect().w - x2) {\r\n                    dx = this.innerRect.x + this.Rect().x\r\n                    dy += sh\r\n                }\r\n            }\r\n        }\r\n    }\r\n\r\n    _Draw(imui, rect) {\r\n        let offy = this.state.mouseDown ? this.pressedOffsetY : 0\r\n        let colr = this.Hover() ? this.highlight : this.color\r\n\r\n        if (this.Hover() && !this.state.mouseDown && this.imageHover) {\r\n            this.drawImageSlice(imui, this.imageHover)\r\n        } else if (this.state.mouseDown && this.imageDown) {\r\n            this.drawImageSlice(imui, this.imageDown)\r\n        } else {\r\n            this.drawImageSlice(imui, this.image)\r\n        }\r\n        \r\n        let txt = this.text.length > (rect.w - 2) / imui.font.cwidth ? this.text.substr(0, parseInt((rect.w - 2) / imui.font.cwidth)) : this.text\r\n    \r\n\r\n        imui.DrawText(rect.x + (rect.w / 2) - (txt.length * imui.font.cwidth) / 2, rect.y + (rect.h / 2) - (imui.font.cheight / 2) + offy, txt, colr)\r\n    }\r\n}\r\n\r\nexport default ButtonImage","import { GetElementType } from './elements.js'\r\n\r\nlet updateDelay = 8\r\n\r\nfunction BezierBlend(t)\r\n{\r\n    return t * t * (3.0 - 2.0 * t)\r\n}\r\n\r\nclass ImUI {\r\n    constructor(canvas, font) {\r\n        this.canvas = canvas\r\n        this.originalCanvas = canvas\r\n        this.ctx = canvas.getContext('2d')\r\n        this.originalCtx = this.ctx\r\n        bfontjs.LoadDefaultFonts()\r\n        this.font = font ? font : bfontjs.Fonts('default')\r\n\r\n        this.lastRect = null\r\n\r\n        this.mousePos = { x: 0, y: 0 }\r\n        this.mouseButton = 0\r\n        \r\n        this.active = null\r\n        this.elements = []\r\n        this.postUpdateIds = []\r\n          \r\n        this.onUpdate = () => {\r\n            return []\r\n        }\r\n\r\n        this.canvas.addEventListener('mousemove', (e) => {\r\n            if (this.executing) {\r\n                this.mousePos.x = parseInt((e.clientX - canvas.offsetLeft) * (this.canvas.width / parseInt(this.canvas.style.width)))\r\n                this.mousePos.y = parseInt((e.clientY - canvas.offsetTop) * (this.canvas.height / parseInt(this.canvas.style.height)))\r\n            }\r\n        })\r\n\r\n        this.canvas.addEventListener('mousedown', (e) => {\r\n            if (this.executing) {\r\n                this.mouseButton = e.buttons\r\n            }\r\n        })\r\n        \r\n        this.canvas.addEventListener('mouseup', (e) => {\r\n            if (this.executing) {\r\n                this.mouseButton = 0\r\n            }\r\n        })\r\n\r\n        window.addEventListener('keydown', (e) => {\r\n            if (this.executing) {\r\n                if (e.key === 'Tab') {\r\n                e.preventDefault()                \r\n                }\r\n            }\r\n        })\r\n\r\n        window.addEventListener('keyup', (e) => {\r\n            if (this.executing) {\r\n                if (this.active) {\r\n                    let element = this.elements.filter(f => f !== undefined).filter(f => f.id === this.active)\r\n                    if (element.length > 0 && element[0].editable) {\r\n                        if (e.key.length === 1) {\r\n                            element[0].prevText = element[0].text\r\n                            element[0].text += e.key\r\n                        } else if (e.key === 'Backspace') {\r\n                            element[0].prevText = element[0].text\r\n                            element[0].text = element[0].text.substring(0, element[0].text.length - 1)\r\n                        } else if (e.key === 'Enter') {\r\n                            this.active = null\r\n                        }\r\n                    }\r\n                    if (element.length > 0) {\r\n                        if (e.key === 'Tab') {\r\n                            let index = this.elements.findIndex(f => f.id === this.active)\r\n                            if (index + 1 < this.elements.length) {\r\n                                index++\r\n                            } else {\r\n                                index = 0\r\n                            }\r\n                            this.active = this.elements[index].id\r\n                        }\r\n                    }\r\n                } else if (this.elements.length > 0) {\r\n                    if (e.key === 'Tab') {\r\n                        this.active = this.elements[0].id\r\n                    }\r\n                }\r\n            }\r\n            return false\r\n        })\r\n        \r\n        this.Enable()\r\n    }\r\n\r\n    Disable() {\r\n        this.executing = false\r\n    }\r\n\r\n    Enable() {\r\n        this.executing = true\r\n        this.UpdateThread()\r\n    }\r\n\r\n    // Update async thread.\r\n    UpdateThread() {\r\n        try {\r\n            if (this.executing) {\r\n                let preUpdateIds = this.elements.map(el => el.id)\r\n\r\n                this.postUpdateIds = []\r\n\r\n                this.elements = this.elements.filter(f => f !== undefined)\r\n                this.onUpdate(this)\r\n\r\n                for (let id in preUpdateIds) {\r\n                    if (this.postUpdateIds.filter(f => f === preUpdateIds[id]).length === 0) {\r\n                        this.elements[this.elements.findIndex(f => f !== undefined && f.id === preUpdateIds[id])] = undefined\r\n                    }\r\n                }\r\n                this.elements = this.elements.filter(f => f !== undefined)\r\n        \r\n                this.Update()\r\n            \r\n                setTimeout(() => this.UpdateThread(), updateDelay)\r\n            }\r\n        } catch (e) { console.error(e) }\r\n    }\r\n\r\n    ChangeContext(canvas) {\r\n        this.canvas = canvas\r\n        this.ctx = canvas.getContext('2d')\r\n    }\r\n    \r\n    ResetContext() {\r\n        this.canvas = this.originalCanvas\r\n        this.ctx = this.originalCtx\r\n    }\r\n\r\n    RemoveElement(id) {\r\n        let index = this.elements.findIndex(f => f.id === id)\r\n        if (index >= 0) {\r\n            let elements = []\r\n            for (let e in this.elements) {\r\n                let element = this.elements[e]\r\n                if (element.id !== id) {\r\n                    elements.push(element)\r\n                }\r\n            }\r\n            this.elements = elements\r\n        }\r\n    }\r\n\r\n    RemoveElements() {\r\n        this.elements = []\r\n    }\r\n\r\n    ElementToTop(id) {\r\n        let index = this.elements.findIndex(f => f.id === id)\r\n        if (index >= 0) {\r\n            let elements = []\r\n            if (index - 1 >= 0) {\r\n                elements = this.elements.slice(0, index)\r\n            }\r\n            if (index + 1 <= this.elements.length - 1) {\r\n                elements.push(...this.elements.slice(index + 1))\r\n            }\r\n            elements.push(this.elements[index])\r\n            this.elements = elements\r\n        }\r\n    }\r\n\r\n    GetMaxTextWidth(txt) {\r\n        let font = this.font\r\n        let lines = []\r\n        try {\r\n            if (typeof txt === 'number') {\r\n                txt = font.codepage.filter(f => f.codenumber === txt)[0].symbol\r\n            }\r\n            lines = txt.split('\\n')\r\n        } catch (e) {\r\n            console.log('Error splitting txt parameters: ', e, ' typeof txt =', typeof txt)\r\n        }\r\n        let w = 0\r\n        for (let l in lines) {\r\n            let line = lines[l]\r\n            if (line.length * font.cwidth > w) {\r\n                w = line.length * font.cwidth\r\n            }\r\n        }\r\n        return w\r\n    }\r\n\r\n    Element(params, parent) {\r\n        params.type = params.type ? params.type : 'element'\r\n        let elem = this.elements.filter(f => f.id === params.id)\r\n        if (elem.length === 0) {\r\n            let ElementClass = GetElementType(params.type)\r\n            let el = new ElementClass(params)\r\n            el.Update(this, false)\r\n            this.elements.push(el)\r\n            this.postUpdateIds.push(params.id)\r\n            this.lastRect = el.rect\r\n            if (parent) {\r\n                el.parentRect = parent.Rect()\r\n                el.parent = parent\r\n            }\r\n            return el\r\n        } else {\r\n            this.postUpdateIds.push(params.id)\r\n            for (let p in params) {\r\n                if (p !== 'anim') {\r\n                    elem[0][p] = params[p]\r\n                }\r\n            }\r\n            this.lastRect = elem[0].rect\r\n            if (parent && !elem[0].parent) {\r\n                elem[0].parentRect = parent.Rect()\r\n                elem[0].parent = parent\r\n            }\r\n            return elem[0]\r\n        }\r\n    }\r\n\r\n    DrawTextFont(font, x, y, text, color, effects) {\r\n        if (text === undefined || text === \"\") {\r\n            return\r\n        }\r\n        return bfontjs.DrawText(this.ctx, parseInt(x), parseInt(y), text, color, font, effects)\r\n    }\r\n\r\n    DrawText(x, y, text, color, effects) {\r\n        return this.DrawTextFont(this.font, x, y, text, color, effects)\r\n    }\r\n    \r\n    DrawRect(rect, color) {\r\n        this.ctx.fillStyle = color\r\n        this.ctx.fillRect(rect.x, rect.y, rect.w, rect.h)\r\n    }\r\n    \r\n    StrokeRect(rect, color) {\r\n        this.ctx.lineWidth = 1\r\n        this.ctx.strokeStyle = color\r\n        this.ctx.strokeRect(parseInt(rect.x) + 0.5, parseInt(rect.y) + 0.5, parseInt(rect.w), parseInt(rect.h))\r\n    }\r\n    StrokeLine(x, y, x2, y2, color) {\r\n        this.ctx.lineWidth = 1\r\n        this.ctx.strokeStyle = color\r\n\r\n        this.ctx.beginPath()\r\n        this.ctx.moveTo(parseInt(x) + 0.5, parseInt(y) + 0.5)\r\n        this.ctx.lineTo(parseInt(x2) + 0.5, parseInt(y2) + 0.5)\r\n        this.ctx.stroke()\r\n    }\r\n\r\n    Update() {\r\n        let eventHandled = false\r\n        for (let e = this.elements.length - 1; e >= 0; e--) {\r\n            if (!eventHandled && this.elements[e]) {\r\n                eventHandled = this.elements[e].Update(this, eventHandled)\r\n            }\r\n        }\r\n    }\r\n\r\n    Draw() {\r\n        for (let e in this.elements) {\r\n            if (this.elements[e]) {\r\n                this.elements[e].Draw(this)\r\n            }\r\n        }\r\n    }\r\n}\r\n\r\nexport { ImUI, BezierBlend, updateDelay }","import Element from './elements/Element.js'\r\nimport FrameFlat from './elements/FrameFlat.js'\r\nimport Frame3d from './elements/Frame3d.js'\r\nimport Button3d from './elements/Button3d.js'\r\nimport ButtonFlat from './elements/ButtonFlat.js'\r\nimport TextBoxFlat from './elements/TextBoxFlat.js'\r\nimport List from './elements/List.js'\r\nimport Image from './elements/Image.js'\r\nimport FrameImage from './elements/FrameImage.js'\r\nimport ButtonImage from './elements/ButtonImage.js'\r\n\r\nfunction GetElementType(type) {\r\n    switch(type.toLowerCase()) {\r\n        case 'element':\r\n            return Element\r\n        case 'frameflat':\r\n            return FrameFlat\r\n        case 'frame3d':\r\n            return Frame3d\r\n        case 'button3d':\r\n            return Button3d\r\n        case 'buttonflat':\r\n            return ButtonFlat\r\n        case 'textboxflat':\r\n            return TextBoxFlat\r\n        case 'list':\r\n            return List\r\n        case 'image':\r\n            return Image\r\n        case 'frameimage':\r\n            return FrameImage\r\n        case 'buttonimage':\r\n            return ButtonImage\r\n    }\r\n}\r\n\r\nexport { Element, FrameFlat, Frame3d, Button3d, ButtonFlat, TextBoxFlat, List, Image, FrameImage, ButtonImage, GetElementType }"],"names":["root","factory","exports","module","require","define","amd","self","__WEBPACK_EXTERNAL_MODULE__517__","__webpack_module_cache__","__webpack_require__","moduleId","cachedModule","undefined","__webpack_modules__","d","definition","key","o","Object","defineProperty","enumerable","get","obj","prop","prototype","hasOwnProperty","call","r","Symbol","toStringTag","value","constructor","params","id","Error","this","autosize","rect","x","y","w","h","color","bgcolor","text","prevText","parentRect","anim","wrap","font","imui","state","clicked","mouseOver","mouseDown","mouseUp","change","prevState","DidChangeState","BuildPreviousState","InsideRect","Rect","Clicked","Hover","MouseDown","MouseUp","setState","p","Update","eventHandled","evt","active","changed","mousePos","mouseButton","curve","elapsed","param","startVal","destination","BezierBlend","duration","updateDelay","onComplete","GetMaxTextWidth","txt","lines","codepage","filter","f","codenumber","symbol","split","e","console","log","l","line","lineLen","c","char","length","GetWrappedText","wrapPos","parseInt","cwidth","join","newLines","push","slice","trim","GetWordWrappedText","index","substring","reverse","search","DoTextWrap","bfontjs","Fonts","default","rectCharWidth","Math","floor","wid","hgt","cheight","DrawText","textcolor","highlight","DrawTextFont","_Draw","DrawRect","cfont","Draw","ctx","save","beginPath","closePath","clip","restore","super","drawBuffer","InitializeBuffer","substr","borderRect","StrokeRect","inverted","shadow","StrokeLine","mx","my","leftChar","rightChar","defaultText","editable","Text","Date","now","bgScrollbar","list","currentItem","scrollOffset","topDown","horizontal","scrollbar","scrollbarCharacters","scrollUp","scrollDown","scrollCaret","draggingCaret","dx","dy","txtRect","isHoverItem","isMouseDownItem","background","colour","upRect","downRect","scrollBarRect","caretPos","caretColr","caretBg","caretHovered","image","height","width","tagName","drawImage","draw","innerRect","borderWidth","dw","dh","sx","sy","sw","sh","imageDown","imageHover","pressedOffsetY","drawImageSlice","x2","y2","offy","colr","t","ImUI","canvas","originalCanvas","getContext","originalCtx","LoadDefaultFonts","lastRect","elements","postUpdateIds","onUpdate","addEventListener","executing","clientX","offsetLeft","style","clientY","offsetTop","buttons","window","preventDefault","element","findIndex","Enable","Disable","UpdateThread","preUpdateIds","map","el","setTimeout","error","ChangeContext","ResetContext","RemoveElement","RemoveElements","ElementToTop","Element","parent","type","elem","toLowerCase","GetElementType","effects","fillStyle","fillRect","lineWidth","strokeStyle","strokeRect","moveTo","lineTo","stroke"],"sourceRoot":""}